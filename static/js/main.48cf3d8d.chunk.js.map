{"version":3,"sources":["Input.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Input","value","label","onChange","placeholder","className","htmlFor","name","e","target","type","App","useState","h","m","s","time","setTime","pace","setPace","distance","setDistance","selectedUnit","setSelectedUnit","changeTime","changePace","getDistance","Number","id","checked","onClick","paceMinutes","hours","Math","floor","pSec","round","num","EPSILON","paceInMinutes","pHours","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.48cf3d8d.chunk.js","sourcesContent":["import React from 'react';\nimport './Input.css';\n\ninterface InputProps {\n  value: number | string;\n  label: string;\n  onChange: (e: any) => void;\n  placeholder: string;\n}\n\nfunction Input({ value, label, onChange, placeholder }: InputProps) {\n  return (\n    <div className=\"Input\">\n      <label htmlFor={label}>{label}</label>\n      <input\n        placeholder={placeholder}\n        name={label}\n        onChange={(e) => onChange(e.target.value)}\n        type=\"text\"\n        value={value}\n      />\n    </div>\n  );\n}\n\nexport default Input;\n","import React, { useState } from 'react';\nimport Input from './Input';\nimport './App.css';\n\nfunction App() {\n  const [time, setTime] = useState({\n    h: 0,\n    m: 0,\n    s: 0,\n  });\n  const [pace, setPace] = useState({\n    h: 0,\n    m: 0,\n    s: 0,\n  });\n  const [distance, setDistance] = useState(0);\n  const [selectedUnit, setSelectedUnit] = useState('meters');\n\n  const changeTime = (value: string, type: string) => {\n    setTime({ ...time, ...{ [type]: value } });\n  };\n\n  const changePace = (value: string, type: string) => {\n    setPace({ ...time, ...{ [type]: value } });\n  };\n\n  const calculateDistance = () => {\n    const minutes = Number(time.s) / 60 + Number(time.m) + Number(time.h) * 60;\n    const paceMinutes = Number(pace.s) / 60 + Number(pace.m) + Number(pace.h) * 60;\n    const unitMultiplier = selectedUnit === 'meters' ? 1000 : 1 / 1.60934;\n    const num = (minutes / paceMinutes) * unitMultiplier;\n    setDistance(Math.round((num + Number.EPSILON) * 100) / 100);\n  };\n\n  const getDistance = () => {\n    if (selectedUnit === 'meters') {\n      return Number(distance) / 1000;\n    }\n    return Number(distance) * 1.60934;\n  };\n\n  const calculateTime = () => {\n    const paceMinutes = pace.s / 60 + pace.m + pace.h * 60;\n    const time = getDistance() * paceMinutes;\n    const hours = Math.floor(time / 60);\n    const pSec = Math.round((time % 1) * 60);\n    setTime({\n      h: hours,\n      m: Math.floor(time - hours * 60),\n      s: pSec,\n    });\n  };\n\n  const calculatePace = () => {\n    const hours = Number(time.s) / 60 / 60 + Number(time.m) / 60 + Number(time.h);\n    const avgSpeed = getDistance() / hours;\n    const paceInMinutes = 60 / avgSpeed;\n    const pHours = Math.floor(paceInMinutes / 60);\n    const pSec = Math.round((paceInMinutes % 1) * 60);\n    setPace({\n      h: 0,\n      m: Math.floor(paceInMinutes - pHours * 60),\n      s: pSec,\n    });\n  };\n\n  return (\n    <div className=\"App\">\n      <h2>Time</h2>\n      <div className=\"App__section\">\n        <Input\n          placeholder=\"Hours\"\n          label=\"Hours\"\n          onChange={(value) => changeTime(value, 'h')}\n          value={time.h}\n        />\n        <Input\n          placeholder=\"Minutes\"\n          label=\"Minutes\"\n          onChange={(value) => changeTime(value, 'm')}\n          value={time.m}\n        />\n        <Input\n          placeholder=\"Seconds\"\n          label=\"Seconds\"\n          onChange={(value) => changeTime(value, 's')}\n          value={time.s}\n        />\n      </div>\n      <h2>Distance</h2>\n      <div className=\"App__section\">\n        <Input\n          placeholder={`Distance in ${selectedUnit}`}\n          label=\"Distance\"\n          onChange={(value) => setDistance(value)}\n          value={distance}\n        />\n        <input\n          type=\"radio\"\n          id=\"meters\"\n          name=\"unit\"\n          value=\"meters\"\n          onChange={(e) => setSelectedUnit(e.target.value)}\n          checked={selectedUnit === 'meters'}\n        />\n        <label htmlFor=\"meters\">Meters</label>\n        <input\n          type=\"radio\"\n          id=\"miles\"\n          name=\"unit\"\n          value=\"miles\"\n          onChange={(e) => setSelectedUnit(e.target.value)}\n          checked={selectedUnit === 'miles'}\n        />\n        <label htmlFor=\"miles\">Miles</label>\n      </div>\n      <h2>Pace</h2>\n      <div className=\"App__section\">\n        <Input\n          placeholder=\"Hours\"\n          label=\"Hours\"\n          onChange={(value) => changePace(value, 'h')}\n          value={pace.h}\n        />\n        <Input\n          placeholder=\"Minutes\"\n          label=\"Minutes\"\n          onChange={(value) => changePace(value, 'm')}\n          value={pace.m}\n        />\n        <Input\n          placeholder=\"Seconds\"\n          label=\"Seconds\"\n          onChange={(value) => changePace(value, 's')}\n          value={pace.s}\n        />\n      </div>\n      <div className=\"App__section\">\n        <button onClick={calculateTime}>Calculate time</button>\n        <button onClick={calculateDistance}>Calculate distance</button>\n        <button onClick={calculatePace}>Calculate pace</button>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);  \n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n}\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}